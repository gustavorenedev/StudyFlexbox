/* CABEÇALHO */

.cabecalho__container {
    display: flex;
    justify-content: space-between; /* ler a documentação CSS-Tricks*/
    align-items: center;
    position: fixed; /* faz o cabeçalho ser fixo ou a propriedade ser fixa*/
    top:0
}
/* para fazer a responsividade precisamos declarar primeiro o valor falso
que no caso é a barra de pesquisar fazendo ela desaparecer */
.cabecalho__pesquisar__item{
    display: none;
}

.menu__container{
    position: fixed;
    bottom: 0%;
    height: 74px;
    width: 100%;
}

/* MENU */
.menu__lista{
    display: flex;
    justify-content: space-evenly ;
    height: 100%;
}

/* propriedades para elemento filho */
.menu__lista li {
    /* centraliza o span */
    align-self: center;
}

.menu__itens {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

/* seleciona elementos com base em suas posições em um grupo de elementos irmãos
    no caso utilizamos para esconder as ul's do menu lista sem precisar de outras classes  */
.menu__lista:nth-child(2),
.menu__lista:nth-child(3),
.menu__lista:nth-child(4){
    display: none;
}

/* SUPERIOR SEÇÃO */
.superior__secao__container{
    display: flex;
    align-items: center;
    /* após ter feito essa mudança as palavras maiores ficaram uma em cima da outra
    ex: ao   e para mudarmos isso utilizaremos:
        vivo */
    /* que formata o texto para continuar reto */
    white-space: nowrap;
    /* overflow: scroll = cria uma barra de rolagem para ver todos os elementos */
    overflow: scroll;
    gap: 15px;
}

/* VIDEO */
.videos__container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.videos__item{
    height: 303px;
    width: 280px;
    /* flex-grow = faz com que todos os elementos se ajustem proporcionalmente, aproveitando o espaço do elemento pai */
    flex-grow: 1;
}

/* DESCRIÇÃO VIDEOS */

.descricao-video {
    margin-top: 1rem;
    display: grid;
    text-align: start;
    column-gap: 1rem;
    row-gap: 10px;
    grid-template-columns: auto 1fr;
}

.descricao-video img {
    grid-area: 1 / 1 / 3 / 2;
}

.descricao-video h3 {
    grid-area: 1 / 2 / 2 / 3;
    font-weight: 700;
    color: #444444;
}

.descricao-video p {
    grid-area: 2 / 2 / 3 / 3;
    font-size: 14px;
    color: #444444;
}

/* RODAPÉ */
.rodape__container{
    display: flex;
    /* flex-direction: column;
    flex-wrap: wrap; permite quebrarmos colunas em mais colunas ou linhas */
    /* e para economizarmos linhas existe o flex-flow que basicamente junta o direction com wrap */
    flex-flow: column wrap;
}

/* para que quando a tela estiver no minimo 834px ela aparecer novamente */
@media (min-width: 834px) {
    /* CABEÇALHO */
    .cabecalho__pesquisar__item{
        display: block;
    }
    /* RODAPÉ */
    .rodape__container {
        justify-content: space-between;
    }
    /* MENU */
    .menu__container {
        left: 0;
        height: auto;
        width: 74px;
        top: 80px;
    }
    
    .menu__lista {
        flex-direction: column;
        justify-content: flex-start;
        padding-top: 15px;
        gap: 33px;
    }
}

@media(min-width: 1440px){
    /* agora que fizemos a responsividade para desktop
    precisamos ajeitar o menu do lado esquerdo */
    .menu__container{
        width: 239px;
        overflow: scroll;
    }
    /* e vamos pegar as listas que escondemos */
    .menu__lista:nth-child(2),
    .menu__lista:nth-child(3),
    .menu__lista:nth-child(4){
    display: flex;
    }
    .menu__lista{
        /* o height no próprio css estava consumindo o espaço
        e com o height:auto fazemos com que os itens aparecam */
        height: auto;
        /* vamos limitar o efeito de fundo do botão */
        padding: 20px 17px 20px 15px;
        gap: 15px;
    }

    .menu__itens{
        /* faz com que os itens fiquem na mesma linha */
        flex-direction: row;
        gap: 15px;
        align-items: center;
    }

    /* selecionamos o 3º filho do menu__lista e fizemos uma column-reverse nele trocando
    todos os valores ao inverso */
    .menu__lista:nth-child(3){
        flex-direction: column-reverse;
    }
    
    /* e agora para rankearmos os lugares de cada item utilizaremos o order */
    .jogos{
        order: 3;
    }
    .filmes{
        order: 2;
    }
    .premium{
        order: 1;
    }
    /* e sempre precisamos colocar order até no ultimo elemento senão ele ficará sempre em cima */
    .maispagina{
        order: 4;
    }
}
